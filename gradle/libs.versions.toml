# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
guava = "33.2.1-jre"
spotless = "6.25.0"
spring-boot = "3.4.0"
dependency-management = "1.1.6"
reactor-test = "3.7.0"
spring-openapi = "2.7.0"
mapstruct = "1.6.3"
testcontainers = "1.20.4"
mysql-connector = "9.1.0"
jaxb-runtime = "4.0.5"

[libraries]
guava = { module = "com.google.guava:guava", version.ref = "guava" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
reactor-test = { module = "io.projectreactor:reactor-test", version.ref = "reactor-test" }
openapi-starter-common = { module = "org.springdoc:springdoc-openapi-starter-common", version.ref = "spring-openapi" }
openapi-starter-webflux-ui = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version.ref = "spring-openapi" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-annotation-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
spring-data-mongodb = { module = "org.springframework.boot:spring-boot-starter-data-mongodb-reactive", version.ref = "spring-boot" }
spring-data-mysql = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
mysql-connector = { module = "com.mysql:mysql-connector-j", version.ref = "mysql-connector" }
spring-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers", version.ref = "spring-boot" }
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb", version.ref = "testcontainers" }
testcontainers-mysql = { module = "org.testcontainers:mysql", version.ref = "testcontainers" }
jaxb-runtime = { module = "org.glassfish.jaxb:jaxb-runtime", version.ref = "jaxb-runtime" }

[plugins]
checkstyle = { id = "checkstyle" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
dependency-management = { id = "io.spring.dependency-management", version.ref = "dependency-management" }
